{"ast":null,"code":"// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n  let index = string.indexOf(substring);\n\n  if (index === -1) {\n    return string;\n  }\n\n  const substringLength = substring.length;\n  let endIndex = 0;\n  let returnValue = '';\n\n  do {\n    returnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n    endIndex = index + substringLength;\n    index = string.indexOf(substring, endIndex);\n  } while (index !== -1);\n\n  returnValue += string.slice(endIndex);\n  return returnValue;\n}\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n  let endIndex = 0;\n  let returnValue = '';\n\n  do {\n    const gotCR = string[index - 1] === '\\r';\n    returnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n    endIndex = index + 1;\n    index = string.indexOf('\\n', endIndex);\n  } while (index !== -1);\n\n  returnValue += string.slice(endIndex);\n  return returnValue;\n}","map":{"version":3,"names":["stringReplaceAll","string","substring","replacer","index","indexOf","substringLength","length","endIndex","returnValue","substr","slice","stringEncaseCRLFWithFirstIndex","prefix","postfix","gotCR"],"sources":["/Users/eitan/Desktop/Classroom-Website/classroom-website/node_modules/chalk/source/utilities.js"],"sourcesContent":["// TODO: When targeting Node.js 16, use `String.prototype.replaceAll`.\nexport function stringReplaceAll(string, substring, replacer) {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n\nexport function stringEncaseCRLFWithFirstIndex(string, prefix, postfix, index) {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.slice(endIndex);\n\treturn returnValue;\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,EAAuD;EAC7D,IAAIC,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAeH,SAAf,CAAZ;;EACA,IAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;IACjB,OAAOH,MAAP;EACA;;EAED,MAAMK,eAAe,GAAGJ,SAAS,CAACK,MAAlC;EACA,IAAIC,QAAQ,GAAG,CAAf;EACA,IAAIC,WAAW,GAAG,EAAlB;;EACA,GAAG;IACFA,WAAW,IAAIR,MAAM,CAACS,MAAP,CAAcF,QAAd,EAAwBJ,KAAK,GAAGI,QAAhC,IAA4CN,SAA5C,GAAwDC,QAAvE;IACAK,QAAQ,GAAGJ,KAAK,GAAGE,eAAnB;IACAF,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAeH,SAAf,EAA0BM,QAA1B,CAAR;EACA,CAJD,QAISJ,KAAK,KAAK,CAAC,CAJpB;;EAMAK,WAAW,IAAIR,MAAM,CAACU,KAAP,CAAaH,QAAb,CAAf;EACA,OAAOC,WAAP;AACA;AAED,OAAO,SAASG,8BAAT,CAAwCX,MAAxC,EAAgDY,MAAhD,EAAwDC,OAAxD,EAAiEV,KAAjE,EAAwE;EAC9E,IAAII,QAAQ,GAAG,CAAf;EACA,IAAIC,WAAW,GAAG,EAAlB;;EACA,GAAG;IACF,MAAMM,KAAK,GAAGd,MAAM,CAACG,KAAK,GAAG,CAAT,CAAN,KAAsB,IAApC;IACAK,WAAW,IAAIR,MAAM,CAACS,MAAP,CAAcF,QAAd,EAAwB,CAACO,KAAK,GAAGX,KAAK,GAAG,CAAX,GAAeA,KAArB,IAA8BI,QAAtD,IAAkEK,MAAlE,IAA4EE,KAAK,GAAG,MAAH,GAAY,IAA7F,IAAqGD,OAApH;IACAN,QAAQ,GAAGJ,KAAK,GAAG,CAAnB;IACAA,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAe,IAAf,EAAqBG,QAArB,CAAR;EACA,CALD,QAKSJ,KAAK,KAAK,CAAC,CALpB;;EAOAK,WAAW,IAAIR,MAAM,CAACU,KAAP,CAAaH,QAAb,CAAf;EACA,OAAOC,WAAP;AACA"},"metadata":{},"sourceType":"module"}